---
import { container, TOKENS } from '../../lib/container/bindings'
import { SubscriptionUseCase } from '../../domain/usecases/SubscriptionUseCase'

const token = Astro.url.searchParams.get('t')

if (!token) {
  // Keep redirect for initial invalid token, as no toast can be shown yet
  return Astro.redirect('/unsubscribe?error=invalid-request')
}

let result = null
let error = null

try {
  const subscriptionUseCase = await container.resolve<SubscriptionUseCase>(
    TOKENS.SUBSCRIPTION_USE_CASE
  )
  result = await subscriptionUseCase.unsubscribe('', token)
} catch (_e) {
  error = 'unsubscribe-failed'
}

// Pass result and error to the client-side script via data attributes
const dataAttrs = {
  'data-success': result?.success ? 'true' : 'false',
  'data-message': result?.message || '',
  'data-error': error || '',
}
---

<main class="min-h-screen bg-white flex items-center justify-center px-6 lg:px-8" {...dataAttrs}>
  <div class="max-w-md w-full text-center">
    <div class="mb-8">
      <span class="text-6xl">üçä</span>
    </div>

    <h1
      class="text-3xl font-bold tracking-tight text-black mb-6"
      style="font-family: var(--font-serif)"
    >
      Cancelamento de Inscri√ß√£o
    </h1>

    {
      result?.success ? (
        <div class="bg-green-50 border border-green-200 rounded-lg p-6 mb-6">
          <div class="text-green-600 text-4xl mb-4">‚úì</div>
          <h2 class="text-lg font-semibold text-green-800 mb-2">Inscri√ß√£o cancelada com sucesso</h2>
          <p class="text-green-700">Voc√™ n√£o receber√° mais emails da newsletter Puro Suco.</p>
        </div>
      ) : (
        <div class="bg-red-50 border border-red-200 rounded-lg p-6 mb-6">
          <div class="text-red-600 text-4xl mb-4">‚úï</div>
          <h2 class="text-lg font-semibold text-red-800 mb-2">Erro ao cancelar inscri√ß√£o</h2>
          <p class="text-red-700">{result?.message || error || 'Token inv√°lido ou expirado.'}</p>
        </div>
      )
    }

    <div class="text-sm text-gray-600 mb-8">
      <p>Mudou de ideia? Voc√™ pode se inscrever novamente a qualquer momento.</p>
    </div>

    <div class="flex flex-col sm:flex-row gap-3 justify-center">
      <a
        href="/"
        class="inline-flex items-center justify-center px-6 py-3 bg-black text-white font-medium rounded-lg hover:bg-gray-800 transition-colors"
      >
        Voltar ao in√≠cio
      </a>

      {
        !result?.success && (
          <a
            href="/#subscribe"
            class="inline-flex items-center justify-center px-6 py-3 bg-white text-gray-700 font-medium rounded-lg border border-gray-200 hover:bg-gray-50 transition-colors"
          >
            Inscrever-se novamente
          </a>
        )
      }
    </div>

    <div class="mt-12 text-xs text-gray-400">
      <p>Se voc√™ continuar tendo problemas, entre em contato conosco.</p>
    </div>
  </div>
</main>

<script is:inline>
  import { showToast } from '../../lib/utils/toast'
  import { showToast } from '../../lib/utils/toast'

  document.addEventListener('DOMContentLoaded', () => {
    const mainElement = document.querySelector('main')
    if (!mainElement) return

    const success = mainElement.dataset.success === 'true'
    const message = mainElement.dataset.message || ''
    const error = mainElement.dataset.error || ''

    if (success) {
      showToast(message, 'success')
    } else if (error) {
      showToast(error, 'error')
    } else {
      showToast('Ocorreu um erro desconhecido.', 'error')
    }
  })
</script>
